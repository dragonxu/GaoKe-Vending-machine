package com.am.modules.repertory.dao;

import com.am.common.dao.MybatisDao;
import com.am.modules.repertory.entity.Repertory;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

@MybatisDao
public interface RepertoryMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    @Delete({
        "delete from repertory",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    @Insert({
        "insert into repertory (ID, name, ",
        "surplus, units, del)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{surplus,jdbcType=REAL}, #{units,jdbcType=VARCHAR}, #{del,jdbcType=INTEGER})"
    })
    int insert(Repertory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    int insertSelective(Repertory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, name, surplus, units, del",
        "from repertory",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Repertory selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Repertory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repertory
     *
     * @mbggenerated
     */
    @Update({
        "update repertory",
        "set name = #{name,jdbcType=VARCHAR},",
          "surplus = #{surplus,jdbcType=REAL},",
          "units = #{units,jdbcType=VARCHAR},",
          "del = #{del,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Repertory record);
}